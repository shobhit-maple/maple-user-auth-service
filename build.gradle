plugins {
	id "java"
	id "groovy"
	id "org.springframework.boot" version "3.4.4"
	id "io.spring.dependency-management" version "1.1.4"
	id "org.unbroken-dome.test-sets" version "4.1.0"
}

group = "com.maple"
version = "1.0"
sourceCompatibility = "21"

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven {
		url = uri("https://maven.pkg.github.com/shobhit-maple/alviss-spring-boot-commons-starter")
		credentials {
			username = System.getenv("GITHUB_USERNAME")
			password = System.getenv("GITHUB_TOKEN")
		}
	}
}

ext {
	set("springCloudVersion", "2024.0.1")
	set("testcontainersVersion", "1.20.6")
	set("spockVersion", "2.4-M2-groovy-4.0")
	set("mockServerVersion", "5.15.0")
}

apply from: "${rootDir}/gradle/integration-test.gradle"

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

dependencies {

	implementation ("org.projectlombok:lombok")
	annotationProcessor("org.projectlombok:lombok")

	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation("org.springframework.boot:spring-boot-starter-data-jpa")
	implementation("org.springframework.boot:spring-boot-starter-validation")
	implementation("org.springframework.boot:spring-boot-starter-security")
	implementation("org.springframework.boot:spring-boot-starter-actuator")
	implementation("org.springframework.kafka:spring-kafka")

	implementation("org.springframework.cloud:spring-cloud-starter-config")

	implementation('org.postgresql:postgresql:42.7.2')
	implementation("org.flywaydb:flyway-core:9.8.3")

	implementation("io.jsonwebtoken:jjwt:0.12.6")

    implementation("org.apache.httpcomponents.client5:httpclient5")
	implementation("org.apache.commons:commons-lang3:3.14.0")
	implementation("commons-collections:commons-collections:3.2.2")
	implementation("io.micrometer:micrometer-registry-prometheus")

	implementation("com.alviss:alviss-spring-boot-commons-starter:1.0.7")

	testImplementation("org.springframework.boot:spring-boot-starter-test")

	integrationTestImplementation("io.rest-assured:rest-assured:5.4.0") {
	}
	integrationTestAnnotationProcessor "org.projectlombok:lombok"

	integrationTestImplementation("org.spockframework:spock-core:${spockVersion}")
	integrationTestImplementation("org.spockframework:spock-spring:${spockVersion}")

	integrationTestImplementation("org.testcontainers:postgresql:${testcontainersVersion}")
	integrationTestImplementation("org.testcontainers:junit-jupiter:${testcontainersVersion}")
	integrationTestImplementation("org.testcontainers:localstack:${testcontainersVersion}")

	integrationTestImplementation("org.mock-server:mockserver-client-java:${mockServerVersion}")
	integrationTestImplementation("org.mock-server:mockserver-netty:${mockServerVersion}")
}

tasks.named("test") {
	useJUnitPlatform()
	finalizedBy integrationTest
}

integrationTest {
	useJUnitPlatform()
}
